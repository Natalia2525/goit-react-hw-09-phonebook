{"version":3,"sources":["Components/ContactList/ContactListItem.module.css","redux/contacts/contacts-selectors.js","Components/PhonebookForm/PhonebookForm.jsx","redux/contacts/contact-operations.js","Components/ContactList/ContactItem.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Views/ContactsView.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","toLocaleLowerCase","PhonebookForm","useState","number","setNumber","setName","inputRef","useRef","dispatch","useDispatch","useSelector","useEffect","current","focus","className","st","form","onSubmit","e","preventDefault","alert","find","fetchAddContactRequest","axios","post","then","data","fetchAddContactSuccess","catch","error","fetchAddContactError","message","addContact","title","ref","input","type","value","onChange","target","button","ContactItem","listItem","onClick","id","a","fetchDeleteContactRequest","delete","fetchDeleteContactSuccess","fetchDeleteContactError","ContactList","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","list","map","useStyles","createUseStyles","display","flexDirection","width","marginBottom","border","background","Filter","classes","changeFilter","ContactsView","container"],"mappings":"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","file":"static/js/6.8bab7292.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactListItem_container__3gElX\",\"list\":\"ContactListItem_list__2mQjr\",\"listItem\":\"ContactListItem_listItem__3V6XP\",\"name\":\"ContactListItem_name__2Ak_f\",\"button\":\"ContactListItem_button__FWlgu\"};","import { createSelector } from '@reduxjs/toolkit';\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n    ),\r\n);\r\n\r\n// export const getVisibleContacts = state => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(filter.toLocaleLowerCase()),\r\n//   );\r\n// };\r\n","import { useState, useRef, useEffect } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport st from './PhonebookForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { addContact } from '../../redux/contacts/contact-operations';\r\n\r\nconst PhonebookForm = () => {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n  const inputRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  const handleNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!name || !number) {\r\n      alert('Please Ðµnter data!');\r\n      setName('');\r\n      setNumber('');\r\n      return false;\r\n    }\r\n    const filterContact = contacts.find(contact => contact.name === name);\r\n    if (!filterContact) {\r\n      dispatch(addContact(name, number));\r\n    } else {\r\n      alert('The entered data exists!');\r\n    }\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={st.form} onSubmit={handleSubmit}>\r\n      <label className={st.title}>\r\n        Name\r\n        <input\r\n          ref={inputRef}\r\n          className={st.input}\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          className={st.input}\r\n          type=\"text\"\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n        />\r\n      </label>\r\n      <button className={st.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// PhonebookForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n//   onCheckUniq: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default PhonebookForm;\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchAddContactError,\r\n  fetchAddContactSuccess,\r\n  fetchAddContactRequest,\r\n  fetchContactsRequest,\r\n  fetchContactsError,\r\n  fetchContactsSuccess,\r\n  fetchDeleteContactRequest,\r\n  fetchDeleteContactSuccess,\r\n  fetchDeleteContactError,\r\n} from './contact-actions';\r\n\r\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(`/contacts`)\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error.message)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(fetchAddContactRequest());\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(fetchAddContactSuccess(data)))\r\n    .catch(error => dispatch(fetchAddContactError(error.message)));\r\n};\r\n\r\nexport const deleteContact = id => async dispatch => {\r\n  dispatch(fetchDeleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(fetchDeleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(fetchDeleteContactError(error.message));\r\n  }\r\n};\r\n","import { useDispatch } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../redux/contacts/contact-operations';\r\nimport st from './ContactListItem.module.css';\r\n\r\n\r\nconst ContactItem = ({ contact }) => {\r\n  // const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleDelete = () => dispatch(deleteContact(contact.id));\r\n  return (\r\n    <li className={st.listItem}>\r\n      <p className={st.name}>{contact.name}</p>\r\n      <p className={st.number}>{contact.number}</p>\r\n\r\n      <button className={st.button} onClick={handleDelete}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\n// ContactItem.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   number: PropTypes.string.isRequired,\r\n//   id: PropTypes.string.isRequired,\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\nexport default ContactItem;\r\n","import ContactItem from './ContactItem';\r\n// import PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\nimport { useEffect } from 'react';\r\nimport { fetchContacts } from '../../redux/contacts/contact-operations';\r\nimport st from './ContactListItem.module.css';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const contacts = useSelector(getVisibleContacts);\r\n\r\n  return (\r\n    <ul className={st.list}>\r\n      {contacts.map(contact => (\r\n        <ContactItem key={contact.id} contact={contact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\n// ContactList.propTypes = {\r\n//   onDelete: PropTypes.func.isRequired,\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string,\r\n//       name: PropTypes.string,\r\n//       number: PropTypes.string,\r\n//     }),\r\n//   ).isRequired,\r\n// };\r\n\r\nexport default ContactList;\r\n","// import PropTypes from 'prop-types';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts/contact-actions';\r\n\r\nconst useStyles = createUseStyles({\r\n  title: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    marginBottom: 30,\r\n  },\r\n  input: {\r\n    border: '2px solid maroon',\r\n    background:\r\n      'linear-gradient(to left, #f8ab8d, rgba(0, 0, 0, 0.1), #f8ab8d)',\r\n  },\r\n});\r\n\r\nconst Filter = () => {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const handleFilterChange = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <label className={classes.title}>\r\n      Find contacts by name\r\n      <input\r\n        className={classes.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={handleFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\n// Filter.propTypes = {\r\n//   onChange: PropTypes.func.isRequired,\r\n//   value: PropTypes.string,\r\n// };\r\n\r\nexport default Filter;\r\n","import PhonebookForm from '../Components/PhonebookForm';\r\nimport ContactList from '../Components/ContactList';\r\nimport Filter from '../Components/Filter';\r\nimport st from '../Components/ContactList/ContactListItem.module.css';\r\n\r\nconst ContactsView = () => {\r\n  return (\r\n    <div className={st.container}>\r\n      <h1>Phonebook</h1>\r\n      <PhonebookForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n"],"sourceRoot":""}