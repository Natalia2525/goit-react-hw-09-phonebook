{"version":3,"sources":["redux/user/user-selectors.js","Components/Navigation.js","Components/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","redux/contacts/contact-reducer.js","redux/user/user-reducer.js","redux/store.js","index.js","redux/contacts/contact-actions.js","redux/user/user-operations.js","redux/user/user-actions.js","Components/PhonebookForm/PhonebookForm.module.css"],"names":["getIsAunteficated","state","user","isAuthenticated","getUserEmail","email","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLogined","useSelector","to","exact","style","activeStyle","container","alignItems","name","marginRight","button","backgroundColor","border","borderRadius","boxShadow","cursor","UserMenu","dispatch","useDispatch","type","onClick","logOut","AuthNav","useStyles","makeStyles","theme","header","justifyContent","app","AppBar","classes","IsAunteficated","position","className","PrivateRoute","children","redirectTo","routeProps","getIsLogin","PublicRoute","restricted","HomeView","lazy","LoginView","RegisterView","ContactsView","App","useEffect","getCurrentUser","fallback","path","component","items","createReducer","fetchContactsSuccess","_","payload","fetchAddContactSuccess","fetchDeleteContactSuccess","filter","id","changeFilter","combineReducers","initialUserState","actions","token","error","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","whitelist","rootReducer","contacts","contactsReducer","persistReducer","userReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","loading","document","getElementById","fetchContactsRequest","createAction","fetchContactsError","fetchAddContactRequest","fetchAddContactError","fetchDeleteContactRequest","fetchDeleteContactError","axios","defaults","baseURL","setToken","headers","register","credentials","post","then","data","catch","message","login","getState","get","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","module","exports"],"mappings":"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","file":"static/js/main.6f8cd576.chunk.js","sourcesContent":["export const getIsAunteficated = state => state.user.isAuthenticated;\r\nexport const getUserEmail = state => state.user.user.email;\r\n","import { NavLink } from 'react-router-dom';\r\nimport { getIsAunteficated } from '../redux/user/user-selectors';\r\nimport {  useSelector } from 'react-redux';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  const isLogined = useSelector(getIsAunteficated);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Главная\r\n      </NavLink>\r\n      {isLogined && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Контакты\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserEmail } from '../redux/user/user-selectors';\r\nimport { logOut } from '../redux/user/user-operations';\r\nimport st from './PhonebookForm/PhonebookForm.module.css';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n    color: 'black'\r\n  },\r\n  button: {\r\n    padding: '5px 40px',\r\n    backgroundColor: 'rgb(184, 92, 80)',\r\n    border: 'none',\r\n    borderRadius: 5,\r\n    boxShadow: '0px 0px 3px 0px black',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(getUserEmail);\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>{email} </span>\r\n      <button\r\n        style={styles.button}\r\n        type=\"button\"\r\n        onClick={() => dispatch(logOut())}\r\n      >\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default UserMenu;\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Логин\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { getIsAunteficated } from '../redux/user/user-selectors';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar1 from '@material-ui/core/AppBar';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  app: {\r\n    backgroundColor: '#f8ab8d',\r\n  },\r\n}));\r\n\r\nconst AppBar = () => {\r\n   const classes = useStyles();\r\n  const IsAunteficated = useSelector(getIsAunteficated);\r\n   return (\r\n     <AppBar1 position=\"static\" className={classes.app}>\r\n         <header className={classes.header}>\r\n           <Navigation />\r\n           {IsAunteficated ? <UserMenu /> : <AuthNav />}\r\n         </header>\r\n     </AppBar1>\r\n   );\r\n}\r\nexport default AppBar;","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport  {getIsAunteficated}  from '../redux/user/user-selectors';\r\n\r\nconst PrivateRoute = ({ children, redirectTo, ...routeProps }) => {\r\n  const getIsLogin = useSelector(getIsAunteficated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {getIsLogin ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsAunteficated } from '../redux/user/user-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nconst PublicRoute = ({\r\n  children,\r\n  restricted = false,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => {\r\n  const getIsLogin = useSelector(getIsAunteficated);\r\n  // const shouldRedirect = getIsLogin && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {getIsLogin && restricted ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n};\r\nexport default PublicRoute;\r\n","import { useEffect, lazy, Suspense } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport AppBar from './Components/AppBar';\r\nimport { getCurrentUser } from './redux/user/user-operations';\r\nimport PrivateRoute from './Components/PrivateRoute';\r\nimport PublicRoute from './Components/PublicRoute';\r\n\r\nconst HomeView = lazy(() => import('./Views/HomeView'));\r\nconst LoginView = lazy(() => import('./Views/LoginView'));\r\nconst RegisterView = lazy(() => import('./Views/RegisterView'));\r\nconst ContactsView = lazy(() => import('./Views/ContactsView'));\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <AppBar />\r\n      <Suspense fallback={<h1>Loading...</h1>}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeView} />\r\n          <PublicRoute\r\n            path=\"/register\"\r\n            component={RegisterView}\r\n            restricted\r\n            redirectTo=\"/\"\r\n          />\r\n          <PublicRoute\r\n            path=\"/login\"\r\n            restricted\r\n            component={LoginView}\r\n            redirectTo=\"/\"\r\n          />\r\n          <PrivateRoute\r\n            path=\"/contacts\"\r\n            component={ContactsView}\r\n            redirectTo=\"/login\"\r\n          />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","\r\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchAddContactSuccess,\r\n  changeFilter,\r\n  fetchContactsSuccess,\r\n  fetchDeleteContactSuccess,\r\n} from './contact-actions';\r\n\r\nconst initialState = {\r\n  items: [],\r\n};\r\n\r\nconst items = createReducer(initialState.items, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [fetchAddContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [fetchDeleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\n// const loading = createReducer(false, {\r\n//   [fetchAddContactRequest]: true,\r\n//   [fetchAddContactSuccess]: false,\r\n//   [fetchAddContactError]: false,\r\n// });\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './user-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\nconst user = createReducer(initialUserState, {\r\n  [actions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [actions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [actions.logoutSuccess]: () => initialUserState,\r\n  [actions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [actions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [actions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [actions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [actions.registerError]: (_, { payload }) => payload,\r\n  [actions.loginError]: (_, { payload }) => payload,\r\n  [actions.logoutError]: () => (_, { payload }) => payload,\r\n  [actions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [actions.registerSuccess]: () => true,\r\n  [actions.loginSuccess]: () => true,\r\n  [actions.getCurrentUserSuccess]: () => true,\r\n  [actions.registerError]: () => false,\r\n  [actions.loginError]: () => false,\r\n  [actions.logoutError]: () => false,\r\n  [actions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport contactsReducer from './contacts/contact-reducer';\r\nimport userReducer from './user/user-reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  user: persistReducer(persistConfig, userReducer),\r\n});\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n","// import types from './contact-types';\r\n// import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\nexport const fetchAddContactRequest = createAction(\r\n  'contacts/fetchAddContactRequest',\r\n);\r\nexport const fetchAddContactSuccess = createAction(\r\n  'contacts/fetchAddContactSuccess',\r\n);\r\nexport const fetchAddContactError = createAction(\r\n  'contacts/fetchAddContactError',\r\n);\r\n\r\nexport const fetchDeleteContactRequest = createAction(\r\n  'contacts/fetchDeleteContactRequest',\r\n);\r\nexport const fetchDeleteContactSuccess = createAction(\r\n  'contacts/fetchDeleteContactSuccess',\r\n);\r\nexport const fetchDeleteContactError = createAction(\r\n  'contacts/fetchDeleteContactError',\r\n);\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport * as actions from './user-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst setToken = token => (axios.defaults.headers['Authorization'] = token);\r\n\r\n// const token = {\r\n//   set(token) {\r\n//     axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n//   },\r\n//   unset() {\r\n//     axios.defaults.headers.common.Authorization = '';\r\n//   },\r\n// };\r\n\r\nexport const register = credentials => dispatch => {\r\n  dispatch(actions.registerRequest());\r\n\r\n  axios\r\n    .post(`/users/signup`, credentials)\r\n    .then(({ data }) => dispatch(actions.registerSuccess(data)))\r\n    .then(({ data }) => setToken(data.token))\r\n    .catch(error => dispatch(actions.registerError(error.message)));\r\n};\r\n\r\nexport const login = credentials => dispatch => {\r\n  dispatch(actions.loginRequest());\r\n\r\n  axios\r\n    .post(`/users/login`, credentials)\r\n    .then(({ data }) => {\r\n      dispatch(actions.loginSuccess(data));\r\n      setToken(data.token);\r\n    })\r\n    .catch(error => dispatch(actions.loginError(error.message)));\r\n};\r\n\r\nexport const logOut = () => dispatch => {\r\n  dispatch(actions.logoutRequest());\r\n\r\n  axios\r\n    .post(`/users/logout`)\r\n    .then(() => {\r\n      dispatch(actions.logoutSuccess());\r\n      setToken(null);\r\n    })\r\n    .catch(error => dispatch(actions.logoutError(error.message)));\r\n};\r\n\r\nexport const getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    user: { token },\r\n  } = getState();\r\n\r\n  if (!token) {\r\n    return;\r\n  }\r\n  setToken(token);\r\n\r\n  dispatch(actions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(`/users/current`)\r\n    .then(({ data }) => dispatch(actions.getCurrentUserSuccess(data)))\r\n    .catch(error => dispatch(actions.getCurrentUserError(error.message)));\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('user/registerRequest');\r\nconst registerSuccess = createAction('user/registerSuccess');\r\nconst registerError = createAction('user/registerError');\r\n\r\nconst loginRequest = createAction('user/loginRequest');\r\nconst loginSuccess = createAction('user/loginSuccess');\r\nconst loginError = createAction('user/loginError');\r\n\r\nconst logoutRequest = createAction('user/logoutRequest');\r\nconst logoutSuccess = createAction('user/logoutSuccess');\r\nconst logoutError = createAction('user/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('user/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('user/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('user/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"PhonebookForm_form__3Lihe\",\"title\":\"PhonebookForm_title__1atNp\",\"input\":\"PhonebookForm_input__htC8l\",\"button\":\"PhonebookForm_button__1p-7Y\"};"],"sourceRoot":""}